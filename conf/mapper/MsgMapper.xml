<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="mapper.MsgMapper">

    <sql id="MsgColumns">
        ${alias}.msg_id,
        ${alias}.msg_title,
        ${alias}.msg_content,
        ${alias}.msg_type,
        ${alias}.msg_img,
        ${alias}.msg_url,
        ${alias}.create_at,
        ${alias}.end_at,
        ${alias}.target_type
    </sql>

    <!-- 录入一条信息 -->
    <insert id="insertMsg" parameterType="domain.Msg" useGeneratedKeys="true" keyProperty="msgId">
        insert into sp_msg
        (msg_title,msg_content,msg_type,msg_img,msg_url,create_at,end_at,target_type)
        values
        (#{msgTitle},#{msgContent},#{msgType},#{msgImg},#{msgUrl},CURRENT_TIMESTAMP(0),#{endAt},#{targetType})
    </insert>

    <select id="getMsgBy" parameterType="domain.Msg" resultType="domain.Msg">
        select
        <include refid="MsgColumns">
            <property name="alias" value="t"/>
        </include>
        from sp_msg t where 1=1
        <if test="msgId!=null and msgId!=''">
            and t.msg_id = #{msgId}
        </if>
        <if test="msgType!=null and msgType!=''">
            and t.msg_type = #{msgType}
        </if>

        ORDER BY t.create_at desc,t.id
    </select>
    <!--获取未接收的未过期的系统消息 -->
    <select id="getNotRecMsg" parameterType="java.lang.Long" resultType="domain.Msg">
        select
        <include refid="MsgColumns">
            <property name="alias" value="t"/>
        </include>
        from sp_msg t where 1=1
        and now()&lt;t.end_at
        and not exists(
            select r.msg_id from sp_msg_rec r
            where r.user_id =#{value}
            and t.msg_id=r.msg_id
        )
    </select>

    <update id="cleanMsg">
        delete from sp_msg where 1=1
        and now()&gt;end_at
        )
    </update>


    <sql id="MsgRecColumns">
        ${alias}.id,
        ${alias}.user_id,
        ${alias}.msg_rec_type,
        ${alias}.msg_id,
        ${alias}.msg_title,
        ${alias}.msg_content,
        ${alias}.msg_type,
        ${alias}.msg_img,
        ${alias}.msg_url,
        ${alias}.create_at,
        ${alias}.target_type,
        ${alias}.read_status,
        ${alias}.del_status
    </sql>
    <insert id="insertMsgRec" parameterType="domain.MsgRec" useGeneratedKeys="true" keyProperty="id">
        insert into sp_msg_rec
        (user_id,msg_rec_type,msg_id,msg_title,msg_content,msg_type,msg_img,msg_url,create_at,read_status,target_type,del_status)
        values
        (#{userId},#{msgRecType},#{msgId},#{msgTitle},#{msgContent},#{msgType},#{msgImg},#{msgUrl},#{createAt},#{readStatus},#{targetType},#{delStatus})
    </insert>

    <select id="getMsgRecBy" parameterType="domain.MsgRec" resultType="domain.MsgRec">
        select
        <include refid="MsgRecColumns">
            <property name="alias" value="t"/>
        </include>
        from sp_msg_rec t where 1=1 and del_status=1
        <if test="id!=null and id!=''">
            and t.id = #{id}
        </if>
        <if test="userId!=null and userId!=''">
            and t.user_id = #{userId}
        </if>
        <if test="msgId!=null and msgId!=''">
            and t.msg_id = #{msgId}
        </if>
        <if test="msgType!=null and msgType!=''">
            and t.msg_type = #{msgType}
        </if>
        <if test="readStatus!=null and readStatus!=''">
            and t.read_status = #{readStatus}
        </if>
        <if test="targetType!=null and targetType!=''">
            and t.target_type = #{targetType}
        </if>

        ORDER BY t.create_at desc,t.id
    </select>
    <update id="updateMsgRec" parameterType="domain.MsgRec">
        update sp_msg_rec
        set user_id=#{userId},
        msg_rec_type=#{msgRecType},
        msg_id=#{msgId},
        msg_title=#{msgTitle},
        msg_content=#{msgContent},
        msg_type=#{msgType},
        msg_img=#{msgImg},
        msg_url=#{msgUrl},
        del_status=#{delStatus},
        read_status=#{readStatus},
        target_type=#{targetType}
        where id=#{id}
    </update>

    <update id="delMsgRec" parameterType="java.lang.Long">
        update sp_msg_rec
        set del_status=2
        where id=#{value}
    </update>

    <select id="getNotReadMsgNum" parameterType="domain.MsgRec" resultType="java.lang.Integer">
        select count(id) from sp_msg_rec where 1=1 and del_status=1
        <if test="userId!=null and userId!=''">
            and user_id = #{userId}
        </if>
        <if test="readStatus!=null and readStatus!=''">
            and read_status = #{readStatus}
        </if>
        <if test="msgType!=null and msgType!=''">
            and msg_type = #{msgType}
        </if>
    </select>
    <update id="updateReadStatus" parameterType="domain.MsgRec">
        update sp_msg_rec
        set read_status=#{readStatus}
        where 1=1 and del_status=1
        <if test="userId!=null and userId!=''">
            and user_id = #{userId}
        </if>
        <if test="msgType!=null and msgType!=''">
            and msg_type = #{msgType}
        </if>
    </update>
    <update id="cleanMsgRec">
        delete from sp_msg_rec r where 1=1 and del_status=2
        and not exists(select msg_id from sp_msg t
        where t.msg_id=r.msg_id)
    </update>
    <!--清除某人指定类型消息 -->
    <update id="cleanMsgRecBy" parameterType="domain.MsgRec">
        update sp_msg_rec
        set del_status=2
        where user_id=#{userId}
        <if test="msgType!=null and msgType!=''">
            and msg_type = #{msgType}
        </if>
    </update>

</mapper>
