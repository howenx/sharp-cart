<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="mapper.IdMapper">

    <!--enable mybatis default cache configure reference:
        https://mybatis.github.io/mybatis-3/zh/sqlmap-xml.html#cache
    -->
    <!--<cache/>-->

    <sql id="addressColumns">
        ${alias}.add_id,
        ${alias}.or_default,
        ${alias}.tel,
        ${alias}.name,
        ${alias}.delivery_city::text,
        ${alias}.delivery_detail,
        ${alias}.id_card_num
    </sql>

    <select id="getAddress" resultType="domain.Address" parameterType="domain.Address">
        select
        <include refid="addressColumns">
            <property name="alias" value="t"/>
        </include>
        from id_address t
        where 1=1 and t.or_destroy=false
        <if test="userId != null and userId!=''">
            and t.user_id = #{userId}
        </if>
        <if test="addId != null and addId!=''">
            and t.add_id = #{addId}
        </if>
        <if test="orDefault != null and orDefault!=''">
            and t.or_default = #{orDefault}
        </if>
        ORDER BY t.or_default DESC
    </select>

    <!--用户附加信息表-->
    <select id="getIdPlus" resultType="domain.IdPlus" parameterType="domain.IdPlus">
        select    plus_id,
        user_id,
        pay_jd_token,
        update_at,
        create_at,
        update_times
        from id_plus where 1=1
        <if test="userId!=null and userId!=''">
            and user_id=#{userId}
        </if>
    </select>
    <insert id="insertIdPlus" parameterType="domain.IdPlus" useGeneratedKeys="true" keyProperty="plusId">
        insert into id_plus(
            user_id,
            pay_jd_token,
            create_at
        )values(#{userId},#{payJdToken},CURRENT_TIMESTAMP(0))
    </insert>
    <update id="updateIdPlus" parameterType="domain.IdPlus">
        update id_plus set  update_at = CURRENT_TIMESTAMP(0),
        pay_jd_token =#{payJdToken},
        update_times=COALESCE(update_times::int,0)+1
        where 1=1 and user_id =#{userId}
    </update>

    <sql id="idColumns">
        ${alias}.user_id,
        ${alias}.nickname,
        ${alias}.passwd,
        ${alias}.email,
        ${alias}.phone_num,
        ${alias}.gender,
        ${alias}.birthday,
        ${alias}.photo_url,
        ${alias}.real_name,
        ${alias}.card_type,
        ${alias}.card_num,
        ${alias}.card_img ::text,
        ${alias}.reg_ip ::text,
        ${alias}.reg_dt,
        ${alias}."active_YN",
        ${alias}."real_YN",
        ${alias}.alter_dt,
        ${alias}.lastlogin_dt,
        ${alias}.lastlogin_ip ::text,
        ${alias}.lastpwdchg_dt,
        ${alias}.desc,
        ${alias}.status
    </sql>

    <!-- 获取一条用户信息 -->
    <select id="getID" resultType="domain.ID" parameterType="java.lang.Integer">
        select
        <include refid="idColumns">
            <property name="alias" value="t"/>
        </include>
        from "ID" t where user_id=${value}
    </select>

</mapper>
