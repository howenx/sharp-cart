# This is the main configuration file for the application.
# ~~~~~

# Secret key
# ~~~~~
# The secret key is used to secure cryptographics functions.
#
# This must be changed for production, but we recommend not changing it in this file.
#
# See http://www.playframework.com/documentation/latest/ApplicationSecret for more details.
play.crypto.secret="8v;v3h5dWC]F=h3Mn4^o398Qope_Zx>h_h=;azYnHWnE[bnjKchJdw8GXNvkTQJT"

# The application languages
# ~~~~~
play.i18n.langs = [ "en" ]

# Router
# ~~~~~
# Define the Router object to use for this application.
# This router will be looked up first when the application is starting up,
# so make sure this is the entry point.
# Furthermore, it's assumed your route file is named properly.
# So for an application router like `my.application.Router`,
# you may need to define a router file `conf/my.application.routes`.
# Default to Routes in the root package (and conf/routes)
# play.http.router = my.application.Routes
#cache
play.modules.enabled+="com.github.mumoshu.play2.memcached.MemcachedModule"
play.modules.disabled+="play.api.cache.EhCacheModule"
# Well-known configuration provided by Play
play.modules.cache.defaultCache=default
play.modules.cache.bindCaches=["db-cache", "user-cache", "session-cache"]
memcached.host="e41045dc421145ec.m.cnhzaliqshpub001.ocs.aliyuncs.com:11211" #memcached host配置
memcached.user=e41045dc421145ec
memcached.password=Style123

# use mybatis-config.xml
play.modules.enabled += "modules.StyleDBModule"
play.modules.enabled += "modules.ShoppingDBModule"
play.modules.enabled += "modules.IdDBModule"
play.modules.enabled += "modules.ActorModule"

play.http.filters = "filters.Filters"
application.global="filters.Global"


image.server.url = "http://hmm-images.oss-cn-beijing.aliyuncs.com/"
deploy.server.url = "https://api.hanmimei.com"
shopping.server.url = "https://shopping.hanmimei.com"
id.server.url = "https://id.hanmimei.com"

akka.actor.default-dispatcher.fork-join-executor.pool-size-max = 64
akka.actor.debug.receive = on

order.countdown.milliseconds = 86400000 //24小时

# Router
# ~~~~~
# Define the Router object to use for this application.
# This router will be looked up first when the application is starting up,
# so make sure this is the entry point.
# Furthermore, it's assumed your route file is named properly.
# So for an application router like `my.application.Router`,
# you may need to define a router file `conf/my.application.routes`.
# Default to Routes in the root package (and conf/routes)
# play.http.router = my.application.Routes

# Database configuration
# ~~~~~
# You can declare as many datasources as you want.
# By convention, the default datasource is named `default`
#
db.style.driver="org.postgresql.Driver"
db.style.url="postgres://user:password@stylemaster.pg.rds.aliyuncs.com:3433/style"
db.style.username=style
db.style.password="style_123"

db.shopping.driver="org.postgresql.Driver"
db.shopping.url="postgres://user:password@stylemaster.pg.rds.aliyuncs.com:3433/shopping"
db.shopping.username=style
db.shopping.password="style_123"

db.id.driver="org.postgresql.Driver"
db.id.url="postgres://user:password@stylemaster.pg.rds.aliyuncs.com:3433/account"
db.id.username=style
db.id.password="style_123"

application.global="filters.Global"
# Database configuration
# ~~~~~
# You can declare as many datasources as you want.
# By convention, the default datasource is named `default`
#
# db.default.driver=org.h2.Driver
# db.default.url="jdbc:h2:mem:play"
# db.default.username=sa
# db.default.password=""

# Evolutions
# ~~~~~
# You can disable evolutions if needed
# play.evolutions.enabled=false

# You can disable evolutions for a specific datasource if necessary
# play.evolutions.db.default.enabled=false
//play.akka.actor-system = "shopping"
//shopping { # the name your actor system is going to use
//  akka {
//    # other thing is just the same as that in API
//    #loglevel = "INFO"
//    #loggers = ["akka.event.slf4j.Slf4jLogger"]
//
//    actor {
//      provider = "akka.remote.RemoteActorRefProvider"
//    }
//    remote {
//      enabled-transports = ["akka.remote.netty.tcp"]
//      netty.tcp {
//        hostname = "127.0.0.1"
//        port = 2555
//        #hostname = my.domain.com # external (logical) hostname
//        #port = 8000 # external (logical) port
//        #bind-hostname = local.address # internal (bind) hostname
//        #bind-port = 2552 # internal (bind) port
//      }
//    }
////    deployment {
////      "/creationActor/*" {
////        remote = "akka.tcp://CalculatorWorkerSystem@127.0.0.1:2552"
////      }
////    }
//  }
//}

include "pay.conf"